/* This file is part of the KDE project
 * Copyright (C) 2006 Thomas Zander <zander@kde.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

#ifndef KWPAGESETTINGS_H
#define KWPAGESETTINGS_H

#include "KWord.h"
#include "kword_export.h"

#include <KoPageLayout.h>

/**
 * This class holds all the settings for one document used in automatic placing of frames.
 * For documents that have a main text auto generated we have a lot of little options
 * to do that. This class wraps all these options.
 */
class KWORD_TEST_EXPORT KWPageSettings {
public:
    /// constructor, initializing the data to some default values.
    KWPageSettings();

    /**
     * Return the current page layout variables.
     */
    const KoPageLayout *pageLayout() const { return &m_pageLayout; }
    /**
     * Return the current columns settings.
     */
    const KoColumns *columns() const { return &m_columns; }
    /**
     * Return the type of header the first page will get.
     */
    KWord::HeaderFooterType firstHeader() const { return m_firstHeader; }
    /**
     * Return the type of footer the first page will get.
     */
    KWord::HeaderFooterType firstFooter() const { return m_firstFooter; }
    /**
     * Return the type of header all the pages, except the first page will get.
     */
    KWord::HeaderFooterType headers() const { return m_headers; }
    /**
     * Return the type of footers all the pages, except the first page will get.
     */
    KWord::HeaderFooterType footers() const { return m_footers; }

    /**
     * This is the main toggle for all automatically generated frames.
     * The generation and placing of the main text frame, as well as headers, footers,
     * end notes and footnotes for the main text flow is enabled as soon as this is on.
     * Turn it off and all the other settings on this class will be ignored.
     * @param on the big switch for auto-generated frames.
     */
    void setMainTextFrame(bool on) { m_mainFrame = on; }
    /**
     * Return if the main text frame, but also the headers/footers etc should be autogenerated.
     */
    bool hasMainTextFrame() const { return m_mainFrame; }

    /// return the distance between the main text and the header
    double headerDistance() const { return m_headerDistance; }
    /**
     * Set the distance between the main text and the header
     * @param distance the distance
     */
    void setHeaderDistance(double distance) { m_headerDistance = distance; }
    /// return the distance between the footer and the frame directly above that (footnote or main)
    double footerDistance() const { return m_footerDistance; }
    /**
     * Set the distance between the footer and the frame directly above that (footnote or main)
     * @param distance the distance
     */
    void setFooterDistance(double distance) { m_footerDistance = distance; }
    /// return the distance between the footnote and the main frame.
    double footnoteDistance() const { return m_footnoteDistance; }
    /**
     * Set the distance between the footnote and the main frame.
     * @param distance the distance
     */
    void setFootnoteDistance(double distance) { m_footnoteDistance = distance; }
    /// return the distance between the main text frame and the end notes frame.
    double endNoteDistance() const { return m_endNoteDistance; }
    /**
     * Set the distance between the main text frame and the end notes frame.
     * @param distance the distance
     */
    void setEndNoteDistance(double distance) { m_endNoteDistance = distance; }

private:
    KoPageLayout m_pageLayout;
    KoColumns m_columns;

    bool m_mainFrame;
    double m_headerDistance, m_footerDistance, m_footnoteDistance, m_endNoteDistance;
    KWord::HeaderFooterType m_firstHeader, m_firstFooter, m_headers, m_footers;
};

#endif
