<KrossScripting>

    <!--
        The "variables" collection provides scripting variables to KWord. Those
        scripting variables are displayed in the Insert=>Variable menu and
        they are able to map functions like to get the variable content or to
        create an options widget for a variable from within scripts.
    //-->
    <collection name="variables" text="Variables" comment="Scripting variables for KWord" enabled="false">

        <!--
            This script reads the value of a variable from an external file.
        //-->
        <script
            name="pyvariablereadfile"
            text="Read From File..."
            comment="Python script to read a variable from a file"
            interpreter="python"
            file="variables/variable_readfile.py">

            <!--
                This is the default value the variable has.
            //-->
            <property name="value">The Value</property>

            <!--
                Map a getValue-request to a scripting function.
            //-->
            <property name="getValue">callbackGetValue</property>

            <!--
                Map a createOptionsWidget-request to a scripting function.
            //-->
            <property name="createOptionsWidget">callbackCreateOptionsWidget</property>
        </script>

    </collection>

    <!--
        The "samples" collection provides misc example scripts to demonstrate
        parts of the KWord scripting functionality.
    //-->
    <collection name="samples" text="Samples" comment="Samples to demonstrate scripting with KWord">

        <script
            name="pysampleimportfile"
            text="Import File..."
            comment="Python script to import content from a file"
            interpreter="python"
            file="extensions/sample_importfile.py" />
        <script
            name="pysampleexportfile"
            text="Export File..."
            comment="Python script to export content to a file"
            interpreter="python"
            file="extensions/sample_exportfile.py" />
        <script
            name="pysampleinsertshape"
            text="Insert Shape..."
            comment="Python script to insert a shape"
            interpreter="python"
            file="extensions/sample_insertshape.py" />
        <script
            name="rbsampledoctree"
            text="Document Tree..."
            comment="QtRuby script that displays the document structur within a treeview"
            interpreter="ruby"
            file="extensions/sample_doctree.rb" />
        <script
            name="rbsamplecursor"
            text="Control Cursor..."
            comment="Ruby script that demonstrates how to control the cursor"
            interpreter="ruby"
            file="extensions/sample_cursor.rb" />
        <script
            name="pysampleactions"
            text="Execute Action..."
            comment="Python script that demonstrates usage of actions"
            interpreter="python"
            file="extensions/sample_actions.py" />
        <script
            name="pysampletoolactions"
            text="Tool Actions..."
            comment="Python script that demonstrates usage of tool actions"
            interpreter="python"
            file="extensions/sample_toolactions.py" />
        <script
            name="pysampleprogressbar"
            text="Progressbar"
            comment="Python script that demonstrates how to use the progressbar"
            interpreter="python"
            file="extensions/sample_progressbar.py" />
        <script
            name="pysampletext"
            text="Text"
            comment="Python script that demonstrates usage of the text engine"
            interpreter="python"
            file="extensions/sample_text.py" />
        <script
            name="pysamplelisthtml"
            text="Lists with HTML"
            comment="Python script that demonstrates how to create lists with HTML"
            interpreter="python"
            file="extensions/sample_lists_html.py" />
        <script
            name="pysamplelistcursor"
            text="Lists with Cursor"
            comment="Python script that demonstrates how to create lists with a cursor"
            interpreter="python"
            file="extensions/sample_lists_cursor.py" />
        <script
            name="pysampletables"
            text="Tables"
            comment="Python script that demonstrates how to deal with tables"
            interpreter="python"
            file="extensions/sample_tables.py" />
        <script
            name="pysamplevariables"
            text="Variables"
            comment="Python script that demonstrates how to handle variables"
            interpreter="python"
            file="extensions/sample_variables.py" />
        <script
            name="pysampleallshapes"
            text="All Shapes"
            comment="Python script adds all shapes"
            interpreter="python"
            file="extensions/sample_allshapes.py" />

    </collection>

</KrossScripting>
