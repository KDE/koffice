<KrossScripting>

    <!--
        The "import" collection provides scripts to import content into KWord.
        //-->
    <collection name="import" text="Import" comment="Import content">
        <script
               name="pyimportfile"
               text="Text or HTML File"
               comment="Python script to import content from a text or html file"
               interpreter="python"
               file="extensions/importfile.py" />
        <script
               name="pyimportdoxyxml"
               text="Doxygen XML"
               comment="Python script to import content from a combined doxygen XML file"
               interpreter="python"
               file="extensions/importdoxyxml.py" />
        <script
               name="pyooimport"
               text="OpenOffice.org UNO"
               comment="Python script to import content using OpenOffice.org PyUNO"
               interpreter="python"
               file="extensions/ooimport.py" />
    </collection>

    <!--
        The "import" collection provides scripts to export content from KWord.
        //-->
    <collection name="export" text="Export" comment="Export content">
        <script
               name="pyexportfile"
               text="Text or HTML File"
               comment="Python script to export content to a text or html file"
               interpreter="python"
               file="extensions/exportfile.py" />
    </collection>

    <!--
        The "samples" collection provides misc example scripts to demonstrate
        parts of the KWord scripting functionality.
        //-->
    <collection name="tools" text="Tools" comment="Miscellaneous scripts">
        <script
               name="rbsampledoctree"
               text="Document Tree"
               comment="QtRuby script that displays the document structur within a treeview"
               interpreter="ruby"
               file="samples/sample_doctree.rb" />
        <script
               name="pysampleonlinehelp"
               text="Online Help"
               comment="Python script that uses the KHTML Part to display the KWord Scripting online help"
               interpreter="python"
               file="samples/sample_onlinehelp.py" />
    </collection>

    <!--
        The "variables" collection provides scripting variables to KWord. Those
        scripting variables are displayed in the Insert=>Variable menu and
        they are able to map functions like to get the variable content or to
        create an options widget for a variable from within scripts.
    <collection name="variables" text="Variables" comment="Scripting variables for KWord" enabled="false">
            This script reads the value of a variable from an external file.
        <script
            name="pyvariablereadfile"
            text="Read From File..."
            comment="Python script to read a variable from a file"
            interpreter="python"
            file="variables/variable_readfile.py">
                This is the default value the variable has.
            <property name="value">The Value</property>
                Map a getValue-request to a scripting function.
            <property name="getValue">callbackGetValue</property>
                Map a createOptionsWidget-request to a scripting function.
            <property name="createOptionsWidget">callbackCreateOptionsWidget</property>
        </script>
    </collection>
    //-->

    <!--
        The "samples" collection provides misc example scripts to demonstrate
        parts of the KWord scripting functionality.
        //-->
    <collection name="samples" text="Samples" comment="Samples to demonstrate scripting with KWord" enabled="true">
        <script
            name="pysampleinsertshape"
            text="Insert Shape..."
            comment="Python script to insert a shape"
            interpreter="python"
            file="samples/sample_insertshape.py" />
        <script
            name="rbsamplecursor"
            text="Control Cursor..."
            comment="Ruby script that demonstrates how to control the cursor"
            interpreter="ruby"
            file="samples/sample_cursor.rb" />
        <script
            name="pysampleactions"
            text="Execute Action..."
            comment="Python script that demonstrates usage of actions"
            interpreter="python"
            file="samples/sample_actions.py" />
        <script
            name="pysampletoolactions"
            text="Tool Actions..."
            comment="Python script that demonstrates usage of tool actions"
            interpreter="python"
            file="samples/sample_toolactions.py" />
        <script
            name="pysampleprogressbar"
            text="Progressbar"
            comment="Python script that demonstrates how to use the progressbar"
            interpreter="python"
            file="samples/sample_progressbar.py" />
        <script
            name="pysampletext"
            text="Text"
            comment="Python script that demonstrates usage of the text engine"
            interpreter="python"
            file="samples/sample_text.py" />
        <script
            name="pysamplelisthtml"
            text="Lists with HTML"
            comment="Python script that demonstrates how to create lists with HTML"
            interpreter="python"
            file="samples/sample_lists_html.py" />
        <script
            name="pysamplelistcursor"
            text="Lists with Cursor"
            comment="Python script that demonstrates how to create lists with a cursor"
            interpreter="python"
            file="samples/sample_lists_cursor.py" />
        <script
            name="pysampletables"
            text="Tables"
            comment="Python script that demonstrates how to deal with tables"
            interpreter="python"
            file="samples/sample_tables.py" />
        <script
            name="pysamplevariables"
            text="Variables"
            comment="Python script that demonstrates how to handle variables"
            interpreter="python"
            file="samples/sample_variables.py" />
        <script
            name="pysampleallshapes"
            text="All Shapes"
            comment="Python script adds all shapes"
            interpreter="python"
            file="samples/sample_allshapes.py" />
    </collection>

</KrossScripting>
