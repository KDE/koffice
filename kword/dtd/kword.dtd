<!--    $Id$

This is an XML document type definition (DTD) for the KWord document format.
Written by Kalle Dalheimer <kalle@kde.org> with (obviously) input from KWord's
author Reginald Stadlbauer <reggie@kde.org>.

Kword DTD version 2 has been created by Thomas Zander, but only small adjustments from
the original version were made.


About the version
-----------------

Current dtd version is 2, look at the kword-v1.dtd file for the old 
(obsolete) fileformat.
Kword will read all file-formats but this is considered the most complete format,
we heighly encourage you to use this format.


KWord overview
--------------

The main structure of each KWord document is a header and a body. The header
contains things like the paper size, the author and so on.

The body is organised around the concept of frames. You might have noticed
that you can do nearly everything with the frames in your KWord document (e.g.
move them around, interlock them, let your text "flow" through them, etc.). To
achieve this flexibility, the body actually has to store the data in a
hierarchy including framesets, frames, paragraphs, and so on.


Some basic notes on XML
-----------------------

- All kinds of numbers are stored like this: foo="1" (between " and " :)

- A rational number looks like this: width="1.03" (note: the '.' separates
integer and fractional parts).

- <XYZ foo="100" bar="0"/> equals <XYZ foo="100" bar="0"></XYZ>

- Unicode-letters (UTF-8 compressed) are used to store the text

- Some special characters ('<', '>') are "escaped" ('&lt;', '&gt;')

- Please launch Kword and save an empty file - it is much easier to follow
this documentation if you wade through an (almost empty) example document.

- The XML begins with a special tag like this:

    <?xml version="1.0" encoding="UTF-8"?>

Each file starts with this tag. Note: You must not "close" this tag (i.e.
don't put a </?xml...> at the end of the file!).

-->

<!--    A KWord document consists of a paper description, a number of
        attributes and the framesets which contain the actual data. It
        can also define a number of styles.

        Attributes:

            editor:         The program this file was written with.

            mime:           The MIME type (must always have the value
                            application/x-kword).

            syntaxVersion:  Integer version of the syntax in the remainder of
                            this file:

                                1...as for KDE 2.0

            url:            ?
-->
<!ELEMENT DOC
    (PAPER, ATTRIBUTES, FRAMESETS, STYLES)>
<!ATTLIST DOC
    editor CDATA #IMPLIED
    mime CDATA "application/x-kword"
    syntaxVersion CDATA #REQUIRED
    url CDATA #IMPLIED>

<!--    Describes the page format. Can have no or one PAPERBORDERS child that
        describes the margins. Normally this is the first tag in the "header".

        Attributes:

            format:         integer value for the page format:

                                0...DIN A3
                                1...DIN A4
                                2...DIN A5
                                3...US LETTER
                                4...US LEGAL
                                5...SCREEN (screen sized)
                                6...CUSTOM (just enter your prefered size)
                                7...DIN B5
                                8...US EXECUTIVE

            width:          width in millimeters.

            height:         height in millimeters.

            orientation:    page orientation:

                                0...Portrait
                                1...Landscape

            columns:        the number of columns (only in wordprocessing
                            mode).

            columnspacing:  the gap between the columns (only in
                            wordprocessing mode).

            hType:          header style:

                                0...same on all pages
                                1...different on first and other pages
                                2...different on even and odd pages

            fType:          footer style:

                                0...same on all pages
                                1...different on first and other pages
                                2...different on even and odd pages

            spHeadBody:     distance (in pt) between headers and the text body (only in
                            wordprocessing mode).

            spFootBody:     distance (in pt) between footers and the text body (only in
                            wordprocessing mode).
-->
<!ELEMENT PAPER
    (PAPERBORDERS?)>
<!ATTLIST PAPER
    format CDATA #REQUIRED
    width CDATA #REQUIRED
    height CDATA #REQUIRED
    orientation CDATA #REQUIRED
    columns CDATA #REQUIRED
    columnspacing CDATA #REQUIRED
    hType CDATA #IMPLIED
    fType CDATA #IMPLIED
    spHeadBody CDATA #IMPLIED
    spFootBody CDATA #IMPLIED>


<!--    Describes the margins of the page.

        Attributes:

            mmleft:           left margin in mm.

            mmright:          right margin in mm.

            mmtop:            top margin in mm.

            mmbottom:         bottom margin in mm.
-->
<!ELEMENT PAPERBORDERS
    EMPTY>
<!ATTLIST PAPERBORDERS
    left CDATA #REQUIRED
    right CDATA #REQUIRED
    top CDATA #REQUIRED
    bottom CDATA #REQUIRED>


<!--    Contains general attributes of the document. Has no children.

        Attributes:

            processing:     0..."Normal" document (Wordprocessing)
                            1...DTP-document (DTPing)

            standardpage:   currently ignored.

            hasHeader:      0...the document has no headers
                            1...the document has headers

            hasFooter:      0...the document has no footers
                            1...the document has footers

            unit:           Basic unit for positioning, ruler,...
                            This has no influence on the units in this document, only on what the user sees.
                                mm...
                                pt...
                                inch...
-->
<!ELEMENT ATTRIBUTES
    EMPTY>
<!ATTLIST ATTRIBUTES
    processing CDATA #REQUIRED
    standardpage CDATA #IMPLIED
    hasHeader CDATA #IMPLIED
    hasFooter CDATA #IMPLIED
    unit CDATA #IMPLIED>


<!--    Container that has a number of FRAMESET children.
-->
<!ELEMENT FRAMESETS
    (FRAMESET+)>


<!--    One frameset that bundles a number of FRAME elements.

        Attributes:

            frametype:      0...Base frame (for internal use only!!!)
                            1...Text frame
                            2...Picture frame
                            3...Part frame (e.g. KImage-Part)
                            4...Formula

            frameInfo:      0...normal text
                            1...header for first page
                            2...header for odd pages
                            3...header for even pages
                            4...footer for first pages
                            5...footer for odd pages,
                            6...footer for even pages
                            7...footnote

            removable:      Whether the header-frame is removable or not:
                            Used in tables where header cells on new pages are 
                            auto created with this set to 1.
                                0...no
                                1...yes

            visible:        Whether the frame is visible or not:

                                0...no
                                1...yes

            grpMgr:         If present, indicates that this frameset is
                            a cell in a table. The value is the name of the
                            group manager for this table. (i.e. If this
                            frameset "belongs" to a table the position and the
                            size are contolled by a group manager (one for
                            each table)).

            row:            Position in the table (only for tables). Index
                            starts at 0. The index for the next row must equal
                            the index for the current row, plus the
                            value of "rows" for the current row.

            col:            Ditto for columns.

            rows:           Size of this cell in rows (only for tables).
                            can be 1 or greater.

            cols:           Ditto for columns.

-->
<!ELEMENT FRAMESET
    (FRAME|PARAGRAPH)*>
<!ATTLIST FRAMESET
    name CDATA
    frameType CDATA #REQUIRED
    frameInfo CDATA #REQUIRED
    removable CDATA #REQUIRED
    visible CDATA #REQUIRED
    grpMgr CDATA #IMPLIED
    row CDATA #IMPLIED
    col CDATA #IMPLIED
    rows CDATA #IMPLIED
    cols CDATA #IMPLIED>

<!ELEMENT FRAME
    EMPTY>

<!--    Describes a frame of a frameset.

        Attributes:

            right, left, top,
            bottom:             absolute coordinates in pt.

            runaround:          0...No run around
                                1...frame repels text in overlapping frames
                                2...Text in overlapping frames will avoid the
                                    complete horizontal space of this frame.

            runaroundGap:       when runaround is 1 specify here the distance
                                between overlapping frames and runaround text

            autocreatenewframe: 0...AutoExtendFrame
                                1...AutoCreateNewFrame
                                2...Ignore extra text

            newFrameBehaviour:  0...on new page creation; Reconnect frame
                                    to current frameset.
                                1...don't create a followup frame on the new
                                    page.
                                2...This frame will be shown on the new page
                                    as well (with the same content)

            sheetSide:          0...AnySide
                                1...this frame will only be shown on odd pages
                                2...this frame will only be shown on even pages

-->
<!ATTLIST FRAME
    left CDATA #REQUIRED
    right CDATA #REQUIRED
    top CDATA #REQUIRED
    bottom CDATA #REQUIRED
    runaround CDATA #IMPLIED
    runaroundGap CDATA #IMPLIED
    autoCreateNewFrame CDATA #REQUIRED
    newFrameBehaviour CDATA #REQUIRED>

<!ELEMENT PARAGRAPH
    (TEXT|FORMATS|LAYOUT)*>
<!ELEMENT TEXT
    EMPTY>
<!--    Just guess :) Currently the text is stored as UTF-8 compressed Unicode
        glyphs. Note: the format-tags navigate in the text using an index
        which starts at 0 and runs up till it reaches length-1. Also the
        length of the text is used to express format-information.
-->
<!ATTLIST TEXT
    value CDATA #IMPLIED>
<!ELEMENT FORMATS
    (FORMAT*)>
<!ELEMENT FORMAT
    (ANCHOR|COLOR|FONT|SIZE|WEIGHT|ITALIC|UNDERLINE|VERTALIGN)*>

<!--    A format tag describes the format of one or more characters in the
        text.

        Attributes:

            removable:          Whether the header-frame is removable or not.

            id:                 type of format information:

                                    0...none (mustn't be in a file)
                                    1..."normal" text
                                    2...a picture
                                    3...tabulator
                                    4...a variable
                                    5...a footnote
                                    6...an anchor for a floating frame.

            pos:                position where the format starts. This is a
                                zero-based index into the text of the
                                paragraph.

            len:                number of characters after pos for which the
                                format is used.
-->
<!ATTLIST FORMAT
    id CDATA #REQUIRED
    pos CDATA #REQUIRED
    len CDATA #IMPLIED>

<!--
        A style is a global setting that is used for all paragraphs which use that
        style. As the markup is stored in one place (the style) changing the markup
        throughout the document is simply a task of changing one or two styles.
        Highly recommended for structured documents.
-->
<!ELEMENT STYLES
    (STYLE*)>
<!ELEMENT STYLE
    (NAME|FOLLOWING|FLOW|INDENTS|OFFSETS|COUNTER|LINESPACE|LEFTBORDER|
        RIGHTBORDER|TOPBORDER|BOTTOMBORDER|FORMAT)*>

<!--    An anchor describes an object which is anchored.

        Attributes:

            type:               What kind of object is being anchored?

                                    grpMgr...a table

            instance:           An identifier that uniquely names the
                                particular instance of the type of object
                                being anchored.
-->

<!ELEMENT ANCHOR
    EMPTY>
<!ATTLIST ANCHOR
    type CDATA #REQUIRED
    instance CDATA #REQUIRED>
<!ELEMENT COLOR
    EMPTY>
<!ATTLIST COLOR
    red CDATA #REQUIRED
    green CDATA #REQUIRED
    blue CDATA #REQUIRED>

<!--
        name is the family name. Don't include fontsizes or bold, that is put in another tag.
-->
<!ELEMENT FONT
    EMPTY>
<!ATTLIST FONT
    name CDATA #REQUIRED>

<!-- SIZE
        When size is used in a format the size is in points.
-->
<!ELEMENT SIZE
    EMPTY>
<!ATTLIST SIZE
    value CDATA #REQUIRED>

<!-- WEIGHT
        Weight of a font is it's Boldness. Look at the QFont weight description for precise
        numbers. Use normal=50, bold=75.
-->
<!ELEMENT WEIGHT
    EMPTY>
<!ATTLIST WEIGHT
    value CDATA #REQUIRED>

<!-- ITALIC
        Value is either 0 or 1 with 1=true and 0=false
-->
<!ELEMENT ITALIC
    EMPTY>
<!ATTLIST ITALIC
    value CDATA #REQUIRED>

<!-- UNDERLINE
        Value is either 0 or 1 with 1=true and 0=false
-->
<!ELEMENT UNDERLINE
    EMPTY>
<!ATTLIST UNDERLINE
    value CDATA #REQUIRED>

<!-- VERTALIGN
            Super/sub script.
            0 = Normal
            1 = Subscript 
            2 = Superscript
-->
<!ELEMENT VERTALIGN
    EMPTY>
<!ATTLIST VERTALIGN
    value CDATA #REQUIRED>

<!-- LAYOUT
        A layout holds all the attributes related to a paragraph,
        other than its text and formatting.
-->
<!ELEMENT LAYOUT
    (FLOW|INDENTS|OFFSETS|LINESPACE|LEFTBORDER|COUNTER
        RIGHTBORDER|TOPBORDER|BOTTOMBORDER|FORMAT|TABULATOR|COUNTERSTART)*>

<!-- COUNTERSTART
        Initialises this paragraph to a specific counter start.
        ##### What is the difference with COUNTER.start ? (DF)
-->
<!ELEMENT COUNTERSTART
    EMPTY>
<!ATTLIST COUNTERSTART
    value CDATA #REQUIRED>

<!-- NAME
        The name of a style
-->
<!ELEMENT NAME
    EMPTY>
<!ATTLIST NAME
    value CDATA #REQUIRED>

<!-- FOLLOWING 
        The FOLLOWING tag is a styles tag. You can only embed it in a style.
        With this tag you can tell kword to switch to the style 'name' after
        enter was pressed and the current style was used.
        Example: Style H1 has the <following name="body"> tag. When the user is
        finished typing the header tag and presses enter kword switches to the 
        style 'body'
        the style-name given should be available.
-->
<!ELEMENT FOLLOWING
    EMPTY>
<!ATTLIST FOLLOWING
    name CDATA #REQUIRED>

<!-- FLOW
        FLOW is a paragraph and style tag, that determines the alignment of the text.
        align's value is one of: 'left', 'right', 'center', 'justify'
-->
<!ELEMENT FLOW
    EMPTY>
<!ATTLIST FLOW
    align CDATA #REQUIRED>
        
<!-- INDENTS
        first: indent (mm) from the left border (of the frame) of the first line of a paragraph
        left: indent (mm) that is used for the other lines in a paragraph.
        right: indent (mm) on the right of all lines in the paragraph
-->
<!ELEMENT INDENTS
    EMPTY>
<!ATTLIST INDENTS
    first CDATA #REQUIRED
    left CDATA #REQUIRED
    right CDATA #REQUIRED>

<!-- OFFSETS
        before: space before the paragraph, or "head offset" (KWord-1), aka "top margin" (mm)
        after: space after the paragraph, or "foot offset" (KWord-1), aka "bottom margin" (mm)
-->
<!ELEMENT OFFSETS
    EMPTY>
<!ATTLIST OFFSETS
    head CDATA #REQUIRED
    foot CDATA #REQUIRED>

<!-- 
        A paragraph and a style can have counter data.
        The document will do the counting of the paragraphs that use this.
        When used on a paragraph (versus a style) only start can be specified.


        type:   0 = None
                1 = Numeral
                2 = Alphabetical
                3 = Alphabetical uppercase
                4 = Roman numbering
                5 = Roman numbering uppercase
                6 = bullet

        depth   The level of the numbering. 
                Depth of 0 means the major numbering. (1, 2, 3...)
                Depth of 1 is 1.1, 1.2, 1.3 etc.

        bullet  The character (in UTF-8) that is 'the bullet' for an unnummered list
        start   The first used number in the numbering.
        numberingtype
                List or chapter numbering.
                List numbering starts at <start> everytime another list is used (everytime a 
                non numbering paragraph has been used)
                Chapter numbering is used throughout the whole document. (in future throughout books)
        lefttext
                The text that is printed left of the first numeral
        righttext
                The text that is printed right of the last numeral
        bulletfont
                The font the bullet can be found in. (use "symbol" if in doubt)
-->
<!ELEMENT COUNTER
    EMPTY>
<!ATTLIST COUNTER
    type CDATA #REQUIRED
    depth CDATA #REQUIRED
    bullet CDATA #REQUIRED
    start CDATA #REQUIRED
    numberingtype CDATA #REQUIRED
    lefttext CDATA #IMPLIED
    righttext CDATA #IMPLIED
    bulletfont CDATA #REQUIRED>

<!-- 
        value in points 
-->
<!ELEMENT LINESPACE
    EMPTY>
<!ATTLIST LINESPACE
    value CDATA #REQUIRED>

<!--
        The borders can be used on a frame and on a paragraph.
        the border has a color, displayed in the RGB value. 
        The width is in points.
        Style   0 = solid
                1 = dashes
                2 = dots
                3 = dash - dot patterns
                4 = dash dot dot patterns
-->
<!ELEMENT LEFTBORDER
    EMPTY>
<!ATTLIST LEFTBORDER
    red CDATA #REQUIRED
    green CDATA #REQUIRED
    blue CDATA #REQUIRED
    style CDATA #REQUIRED
    width CDATA #REQUIRED>
<!ELEMENT RIGHTBORDER
    EMPTY>
<!ATTLIST RIGHTBORDER
    red CDATA #REQUIRED
    green CDATA #REQUIRED
    blue CDATA #REQUIRED
    style CDATA #REQUIRED
    width CDATA #REQUIRED>
<!ELEMENT TOPBORDER
    EMPTY>
<!ATTLIST TOPBORDER
    red CDATA #REQUIRED
    green CDATA #REQUIRED
    blue CDATA #REQUIRED
    style CDATA #REQUIRED
    width CDATA #REQUIRED>
<!ELEMENT BOTTOMBORDER
    EMPTY>
<!ATTLIST BOTTOMBORDER
    red CDATA #REQUIRED
    green CDATA #REQUIRED
    blue CDATA #REQUIRED
    style CDATA #REQUIRED
    width CDATA #REQUIRED>

<!ELEMENT TABULATOR
    EMPTY>
<!ATTLIST TABULATOR
    mmpos CDATA #REQUIRED
    ptpos CDATA #REQUIRED
    type CDATA #REQUIRED>

