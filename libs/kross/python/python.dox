/** @section python The Python interpreter backend
 *
 * The Python interpreter backend implements scripting with Python.
 *
 * The @a Kross::PythonInterpreter class implements @a Kross::Interpreter
 * for the Python interpreter backend and provides with the
 * @a Kross::PythonInterpreter::createScript a factory method to create
 * @a Kross::PythonScript instances.
 *
 * The @a Kross::PythonScript class implements @a Kross::Script for the
 * Python backend to provide the functionality to execute Python code
 * within a script-container.
 *
 * The @a Kross::PythonModule class is the __main__ Python environment used
 * as global object namespace. This module is shared between the different
 * @a Kross::PythonScript instances which run in there own module namespace.
 * The @a Kross::PythonModule also spends access to the the whole Kross
 * functionality and manages all the @a Kross::PythonExtension modules.
 *
 * The @a Kross::PythonExtension class implements a Py::Object to wrap a
 * QObject instance into the world of Python.
 *
 * Within PythonVariant the @a Kross::PythonType helper class is used to cast
 * between QVariant and Py::Object values while the @a Kross::PythonMetaTypeFactory
 * helper class is used as factory within @a Kross::PythonExtension to translate
 * an argument into a @a Kross::MetaType needed for QGenericArgument's data pointer.
 */
