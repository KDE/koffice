GUI:
-	split the dialog under "Object->Transform" into different non-tabbed dialogs
-	remove the "Selection property" docker, this is basically the same as the above docker
-	remove the dialogs which show up when double clicking the strokefillpreview, this job is done
	by "color manager" docker
-	other koffice apps have widgts that may of interest to us, for instance in kpresenter. We should
	try to reuse them.
-	make a tool of the patterns with support for pattern vector.
-	make a UI for the node manipulation tool.
-	rework the stroke/fill docker with preview on the document and apply button.
-	Find a better way to select a color than the color manager. Maybe a popup ?
-	gradient widget: maybe turn the midpoint arrows to black or 3d triangles like in gimp or illu
-	gradient widget: better seperate the midpoint arrows from the color stop triangles: put them
	above the gradient bar like in adobe products. the current situation is a bit nasty
	with near together midpoints and colorstops
-	gradient widget: the midpoint arrows are currently hard to hit and modify

REAL BUGS:
-	patterns dont zoom
-	VSelectionTool has an offset error relative to the handle nodes in the VSelection.
-	fix i18n singular/plural
-	copying works wrong: the last selected shape is pasted instead of the shape one copied
-	crashes in vtext
-	make curve1To, curve2To work

TODO:
-	move the X11-hacks from VPolylineTool to VCanvas so that other tools can benefit from that.
-	remove all setYMirroring() outside of VCanvas, this is an implementation detail
-	make pattern and gradient coords absolute and not relative to the shape
-	polylinetool seems to generate flat beziers instead of lines. this gives unexpected results
	in "round corners".
-	vroundcorners needs to be improved for beziers and big radii (lenny)
-	VImage
-	VPattern like VImage with embedded binaries instead of paths
-	bring text support back, ideally using fontconfig and freetype, and no xft.
-	printing
-	use VPathIterator everywhere instead of direct VPath access where not necessary.
	this way you'll get node undo/redo automatically.
-	add undo/redo to shape commands like VFlattenCmd etc
-	select first/last segment's knot if one of each other's knot is selected
-	allow for multiple strokes and fills in VPath which get rendered in the order they occur.
-	use inside/intersection tests in vpath::combine() for changing winding.
-	use vflatten in vselectool for more precise selection (lenny)
-	change flatness test in intersection code to a estimation used in gems code. otherwise
	if the 2 input curves are the same our code runs forever.

WISHLIST:
-	clipart tool: single click should insert the clipart like a single click like with the shape tools
-	clipart tool: add ctrl-drag behaviour like with the shape tools
-	Ctrl or Shift (pressed) while dragging a shape should make the shape move along only one axis
-	krita export filter (with layers)
-	gimp gradient import

OPTIMIZATION:
-	in VShapeTool and all manipulation tools: store temporary objects so one doesnt
	have to recalcuate/regenerate those for second draw() (erasing old shape)
-	make fill/stroke shared so copying for undo/redo is more efficient
-	transform() bbox too and dont recalculate it
-	check places we use sqrt() if these are really necessary (lenny)

MAKE IT NICE:
-	use SVG's path notation natively?
-	can't we pass VTool::draw() a painter inseatd of each tool creating a painter itself?
-	remove V*Tool::refreshUnit(). call this directly via dialog() instead
-	pass all dialogs a parent
-	introduce centroid() for vpath. problem: CM for beziers?
-	think about using ghostscript's flatten algo (see comments in vflatten.cc)

