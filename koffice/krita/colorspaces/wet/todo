* Implement wet model
* Implement wet paintop
* Implement dry filter
* Enable/disable all relevant gui bits on switching to/from a wet layer
* Create something that can periodically call the dry filter
* A palette with the special colour for wet painting: a docker tab for the colour docker.

Perhaps: a special layer type or paint device, with an extensible option widget.

When to create the height field? Ideally, the height field should be visualized in subtle shades
of grey before painting.

How to hack into the creation of paint devices? We need initializers, extra options, status
widgets and thread or timer based continuous running filters.

-> Maybe add an initializePaintDevice(rect) method to the color strategy that is called with the image
rect on creation. Then, for uninitialized rects (because of autolayers extension) call the method again.

A wet layer is equivalent to the wetpack; two layers, i.e., stacked pixels, per pixel.

The filter will contain the physics model: paint flow, drying and adsorbing onto the lower "layer"



