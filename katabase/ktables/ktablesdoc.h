/***************************************************************************
                          ktablesdoc.h  -  description                              
                             -------------------                                         
    begin                : Mið Júl  7 17:04:49 CEST 1999
                                           
    copyright            : (C) 1999 by Ørn E. Hansen                         
    email                : hanseno@mail.bip.net                                     
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   * 
 *                                                                         *
 ***************************************************************************/


#ifndef KTABLESDOC_H
#define KTABLESDOC_H

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif 

// include files for QT
#include <qobject.h>
#include <qstring.h>
#include <qlist.h>

#include <opDocument.h>

// forward declaration of the Ktables classes
class KtablesView;

/**	KtablesDoc provides a document object for a document-view model.
  *
	* The KtablesDoc class provides a document object that can be used in conjunction with the classes KtablesApp and KtablesView
	* to create a document-view model for standard KDE applications based on KApplication and KTMainWindow. Thereby, the document object
	* is created by the KtablesApp instance and contains the document structure with the according methods for manipulation of the document
	* data by KtablesView objects. Also, KtablesDoc contains the methods for serialization of the document data from and to files.
	*
	* @author Source Framework Automatically Generated by KDevelop, (c) The KDevelop Team. 	
	* @version KDevelop version 0.4 code generation
	*/
class KtablesDoc : public QObject, public OPDocumentIf
{
  Q_OBJECT

 public:
  /** Constructor for the fileclass of the application */
  KtablesDoc(QWidget* parent, const char *name=0);
  /** Destructor for the fileclass of the application */
  virtual ~KtablesDoc();

  /** This one is reimplemented from openparts. */
  virtual OpenParts::View_ptr createView();

  /** Add a view */
  virtual void addView(KtablesView *);
  /** Remove a view */
  virtual void removeView(KtablesView *);
  /** return the current view */
  virtual KtablesView *currentView();

  /** sets the modified flag for the document after a modifying action on the view connected to the document.*/
  void setModified(bool modified=true){ b_modified=modified; }
	/** returns if the document is modified or not. Use this to determine if your document needs saving by the user on closing.*/
  bool isModified(){ return b_modified;}
	/** "save modified" - asks the user for saving if the document is modified */
	bool saveModified();	
	/** deletes the document's contents */
	void deleteContents();
	/** initializes the document generally */
	bool newDocument();
	/** closes the actual document */
	void closeDocument();
	/** loads the document by filename and format and emits the updateViews() signal */
  bool openDocument(const char* filename, const char* format=0);
  /** saves the document under filename and format.*/	
  bool saveDocument(const char* filename, const char* format=0);
	/** sets the path to the file connected with the document */
	void pathName(const char* path_name);
	/** returns the pathname of the current document file */
	const QString& getPathName() const;
	/** sets the filename of the document */
	void title(const char* title);
	/** returns the title of the document */
	const QString& getTitle() const;
	
 signals:
  void signalMsg(const char *);

 public slots:
 	/** calls repaint() on all views connected to the document object and is called by the view by which the document has been changed.
 	  * As this view normally repaints itself, it is excluded from the paintEvent. */
 	void slotUpdateAllViews(KtablesView* pSender);
	/** The following slots, are here to bridge the gap between the
	  * view and the application.
	  */
	void removeRow();
	void insertRow();
	void commitChanges();
	void discardChanges();
	 	
 private:
 	/** the modified flag of the current document */
 	bool b_modified;
	QString m_title;
	QString m_path;

};

#endif // KTABLESDOC_H




























