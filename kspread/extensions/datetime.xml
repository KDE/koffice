<!DOCTYPE KSpreadFunctions>
<KSpreadFunctions>

  <Group>
    <GroupName>Date and Time</GroupName>

    <Function>
      <Name>WEEKS</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>First (earlier) date value</Comment>
	<Type>String</Type>
      </Parameter>
      <Parameter>
	<Comment>Second date value</Comment>
	<Type>String</Type>
      </Parameter>
      <Parameter>
	<Comment>Calculation mode</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The WEEKS() function returns the difference between two dates in weeks.The third parameter indicates the calculation mode: if the mode is 0, WEEKS() returns the maximal possible number of weeks between those days. If the mode is 1, it only returns the number of whole weeks in between.</Text>
	<Syntax>WEEKS(date2, date1, mode)</Syntax>
	<Example>WEEKS("02/18/2002", "02/26/2002", 0) returns 1, because there is one week and 1 day in between</Example>
	<Example>WEEKS("02/19/2002", "02/26/2002", 1) returns 0, because there is not a whole week in between, starting at the first day of the week (monday or sunday, depending on your local settings)</Example>
      </Help>
    </Function>

    <Function>
      <Name>MONTHS</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>First (earlier) date value</Comment>
	<Type>String</Type>
      </Parameter>
      <Parameter>
	<Comment>Second date value</Comment>
	<Type>String</Type>
      </Parameter>
      <Parameter>
	<Comment>Calculation mode</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The MONTHS() function returns the difference between two dates in months.The third parameter indicates the calculation mode: if the mode is 0, MONTHS() returns the maximal possible number of months between those days. If the mode is 1, it only returns the number of complete months in between.</Text>
	<Syntax>MONTHS(date2, date1, mode)</Syntax>
	<Example>MONTHS("01/18/2002", "02/26/2002", 0) returns 1, because there is 1 month and 8 days in between</Example>
	<Example>MONTHS("01/19/2002", "02/26/2002", 1) returns 0, because there is not a whole month in between, starting at the first day of the month</Example>
      </Help>
    </Function>

    <Function>
      <Name>YEARS</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>First (earlier) date value</Comment>
	<Type>String</Type>
      </Parameter>
      <Parameter>
	<Comment>Second date value</Comment>
	<Type>String</Type>
      </Parameter>
      <Parameter>
	<Comment>Calculation mode</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The YEARS() function returns the difference between two dates in years.The third parameter indicates the calculation mode: if the mode is 0, YEARS() returns the maximal possible number of months between those days. If the mode is 1, it only returns whole years, starting at the 1st Jan and ending on the 31st Dec.</Text>
	<Syntax>YEARS(date2, date1, mode)</Syntax>
	<Example>YEARS("02/19/2001", "02/26/2002", 0) returns 1, because there is one year and 7 days in between</Example>
	<Example>YEARS("02/19/2002", "02/26/2002", 1) returns 0, because there is not a whole year in between, starting at the first day of the year</Example>
      </Help>
    </Function>

    <Function>
      <Name>DAYS</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>First (earlier) date value</Comment>
	<Type>String</Type>
      </Parameter>
      <Parameter>
	<Comment>Second date value</Comment>
	<Type>String</Type>
      </Parameter>
      <Help>
	<Text>The DAYS() function returns the difference between two dates in days.</Text>
	<Syntax>DAYS(date2, date1)</Syntax>
	<Example>DAYS("02/22/2002", "02/26/2002") returns 4</Example>
      </Help>
    </Function>

    <Function>
      <Name>dayOfYear</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>Year</Comment>
	<Type>Int</Type>
      </Parameter>
      <Parameter>
	<Comment>Month</Comment>
	<Type>Int</Type>
      </Parameter>
      <Parameter>
	<Comment>Day</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The dayOfYear() function returns the number of the day in the year (1...365).</Text>
	<Syntax>dayOfYear(year;month;date)</Syntax>
	<Example>dayOfYear(2000;12;1) returns 336</Example>
	<Example>dayOfYear(2000;2;29) returns 60</Example>
      </Help>
    </Function>

    <Function>
      <Name>date</Name>
      <Type>String</Type>
      <Parameter>
	<Comment>Year</Comment>
	<Type>Int</Type>
      </Parameter>
      <Parameter>
	<Comment>Month</Comment>
	<Type>Int</Type>
      </Parameter>
      <Parameter>
	<Comment>Day</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The date() function returns the date formatted with local parameters.</Text>
	<Syntax>date(year;month;date)</Syntax>
	<Example>date(2000;5;5) returns Friday 05 May 2000</Example>
      </Help>
    </Function>

    <Function>
      <Name>time</Name>
      <Type>String</Type>
      <Parameter>
	<Comment>Hours</Comment>
	<Type>Int</Type>
      </Parameter>
      <Parameter>
	<Comment>Minutes</Comment>
	<Type>Int</Type>
      </Parameter>
      <Parameter>
	<Comment>Seconds</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The time() function returns the time formatted with local parameters.</Text>
	<Syntax>time(hours;minutes;seconds)</Syntax>
	<Example>time(10;2;2) returns 10:02:02</Example>
        <Example>time(10;70;0) returns 11:10:0</Example>
        <Example>time(10;-40;0) returns 9:20:0</Example>
      </Help>
    </Function>
    
    <Function>
     <Name>hours</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>time</Comment>
	<Type>String</Type>
      </Parameter>
      <Help>
	<Text>The hours() function returns the value of the hours in a time expression.</Text>
	<Syntax>hours(time)</Syntax>
	<Example>hours("10:5:2") returns 10</Example>
      </Help>
    </Function>

    <Function>
     <Name>isLeapYear</Name>
      <Type>Boolean</Type>
      <Parameter>
	<Comment>year</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The function isLeapYear() returns True if the given year is leap.</Text>
	<Syntax>isLeapYear(year)</Syntax>
	<Example>isLeapYear(2000) returns True</Example>
      </Help>
    </Function>

    <Function>
     <Name>daysInMonth</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>year</Comment>
	<Type>Int</Type>
      </Parameter>
      <Parameter>
	<Comment>month</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The function daysInMonth() returns number of days in the given year and month.</Text>
	<Syntax>daysInMonth(year;month)</Syntax>
	<Example>daysInMonth(2000;2) returns 29</Example>
      </Help>
    </Function>

    <Function>
     <Name>daysInYear</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>year</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The function daysInYear() returns the number of days in the given year.</Text>
	<Syntax>daysInYear(year)</Syntax>
	<Example>daysInYear(2000) returns 366</Example>
      </Help>
    </Function>

    <Function>
     <Name>weeksInYear</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>year</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The function weeksInYear() returns the number of weeks in the given year.</Text>
	<Syntax>weeksInYear(year)</Syntax>
	<Example>weeksInYear(2000) returns 52</Example>
      </Help>
    </Function>

    <Function>	  
     <Name>minutes</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>time</Comment>
	<Type>String</Type>
      </Parameter>
      <Help>
	<Text>The minutes() function returns the value of the minutes in a time expression.</Text>
	<Syntax>minutes(time)</Syntax>
	<Example>minutes("10:5:2") returns 5</Example>
      </Help>
    </Function>

    <Function>
     <Name>seconds</Name>
      <Type>Int</Type>
      <Parameter>
	<Comment>time</Comment>
	<Type>String</Type>
      </Parameter>
      <Help>
	<Text>The seconds() function returns the value of the seconds in a time expression.</Text>
	<Syntax>seconds(time)</Syntax>
	<Example>seconds("10:5:2") returns 2</Example>
      </Help>
    </Function>

    <Function>
      <Name>day</Name>
      <Type>String</Type>
      <Parameter>
	<Comment>Number of day in week (1..7)</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The day() function returns the name of the day of the week (1..7). In some countries the first day of the week is Monday, while in others the first day of the week is Sunday.</Text>
	<Syntax>day(weekday)</Syntax>
	<Example>day(1) returns Monday (if the week starts on Monday)</Example>
      </Help>
    </Function>

    <Function>
      <Name>month</Name>
      <Type>String</Type>
      <Parameter>
	<Comment>Number of month (1..12)</Comment>
	<Type>Int</Type>
      </Parameter>
      <Help>
	<Text>The month() function returns the name of the month (1...12).</Text>
	<Syntax>month(number)</Syntax>
	<Example>month(5) returns May</Example>
      </Help>
    </Function>

    <Function>
      <Name>currentDate</Name>
      <Type>String</Type>
      <Help>
	<Text>The currentDate() function returns the current date formatted with local parameters.</Text>
	<Syntax>currentDate()</Syntax>
	<Example>currentDate() returns "Saturday 15 July 2000"</Example>
      </Help>
    </Function>

    <Function>
      <Name>shortcurrentDate</Name>
      <Type>String</Type>
      <Help>
	<Text>The shortcurrentDate() function returns the current date formatted with local parameters.</Text>
	<Syntax>shortcurrentDate()</Syntax>
	<Example>shortcurrentDate() returns "2001-05-19"</Example>
      </Help>
    </Function>

    <Function>
      <Name>currentDateTime</Name>
      <Type>String</Type>
      <Help>
	<Text>The currentDateTime() function returns the current date and time formatted with local parameters.</Text>
	<Syntax>currentDateTime()</Syntax>
	<Example>currentDateTime() returns "Saturday 15 July 2000 19:12:01"</Example>
      </Help>
    </Function>

    <Function>
      <Name>currentTime</Name>
      <Type>String</Type>
      <Help>
	<Text>The currentTime() function returns the current time formatted with local parameters.</Text>
	<Syntax>currentTime()</Syntax>
	<Example>currentTime() returns "19:12:01"</Example>
      </Help>
    </Function>

  </Group>

</KSpreadFunctions>
