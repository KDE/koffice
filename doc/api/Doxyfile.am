## generate API documentation with doxygen
apidox-am-yes:
	@if test "$(subdir)" != "."; then \
		$(mkinstalldirs) $(top_builddir)/apidocs/$(subdir) ;\
		cp $(top_srcdir)/doc/api/Doxyfile.pim Doxyfile; \
		echo "PROJECT_NAME           = \"$(subdir)\"" >> Doxyfile; \
		echo "PROJECT_NUMBER         = \"Version $(VERSION)\"" >> Doxyfile; \
		echo "INPUT                  = $(srcdir)" >> Doxyfile; \
		echo "IMAGE_PATH             = $(top_srcdir)/doc/api" >> Doxyfile ;\
		echo "OUTPUT_DIRECTORY       = $(top_builddir)/apidocs" >> Doxyfile; \
		echo "HTML_OUTPUT            = $(subdir)/html" >> Doxyfile; \
		echo "HTML_HEADER            = $(top_srcdir)/doc/api/header.html" >> Doxyfile; \
		echo "HTML_FOOTER            = $(top_srcdir)/doc/api/footer.html" >> Doxyfile; \
		echo "HTML_STYLESHEET        = $(top_builddir)/apidocs/doxygen.css" >> Doxyfile; \
		echo "LATEX_OUTPUT           = $(subdir)/latex" >> Doxyfile; \
		echo "RTF_OUTPUT             = $(subdir)/rtf" >> Doxyfile; \
		echo "MAN_OUTPUT             = $(subdir)/man" >> Doxyfile; \
		$(DOXYGEN) Doxyfile ;\
		sh $(top_srcdir)/doc/api/doxyndex.sh $(top_builddir)/apidocs $(subdir)/html ; \
	fi

apidox-am-no:

install-data-local: install-apidox

## install API documentation
install-apidox:
	@if test "$(subdir)" != "."; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html ; \
		if test -f $(top_builddir)/apidocs/$(subdir)/$(subdir).tag; then \
		echo $(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi; \
		if test -d $(top_builddir)/apidocs/$(subdir)/html; then \
			list=`ls $(top_builddir)/apidocs/$(subdir)/html`; \
			echo "installing $(top_builddir)/apidocs/$(subdir)/html" ;\
			for file in $$list; do \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/html/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html; \
		done; \
		fi; \
		rm -f $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/common; \
		$(LN_S) $(kde_libs_htmldir)/en/common $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/common; \
	else\
		if test -d $(top_builddir)/apidocs; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs ;\
		list=`cd $(top_builddir)/apidocs && ls -1`; \
		echo "installing $(top_builddir)/apidocs/$$file" ;\
		for file in $$list; do \
			if test -f $(top_builddir)/apidocs/$$file; then \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
			fi; \
		done ; fi; \
	fi

uninstall-local: uninstall-apidox

## uninstall API documentation
uninstall-apidox:
	@if test "$(subdir)" != "."; then \
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); then \
			rm -rfv $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi\
	else\
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; then \
			rm -rfv $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
		fi\
	fi

apidox:
	@if test "$(subdir)" != "."; then \
		$(MAKE) apidox-am-@KDE_HAS_DOXYGEN@ ;\
	else \
		$(MAKE) apidox-am-toplevel-@KDE_HAS_DOXYGEN@ ;\
	fi
	@set fnord $(MAKEFLAGS); amf=$$2; if test -n '$(SUBDIRS)'; then \
	    list='$(SUBDIRS)'; \
	    for subdir in $$list; do \
		if grep '^include .*Doxyfile.am' $(srcdir)/$$subdir/Makefile.am > /dev/null ; then \
		echo "Making apidox in $$subdir"; \
		if test "$$subdir" != "."; then \
			(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) GENERATE_FLAG=no apidox) || exit 1; \
		fi ; fi ;\
	    done; \
	    for subdir in $$list; do \
		if grep '^include .*Doxyfile.am' $(srcdir)/$$subdir/Makefile.am > /dev/null ; then \
		echo "Making apidox in $$subdir"; \
		if test "$$subdir" != "."; then \
			(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) GENERATE_FLAG=yes apidox) || exit 1; \
		fi ; fi ;\
	    done; \
	fi

apidox-am-toplevel-no:
apidox-am-toplevel-yes:
	@echo "*** Creating API documentation main page"; \
	cp $(top_srcdir)/admin/Doxyfile.global Doxyfile; \
	echo "PROJECT_NAME           = \"$(DOXYGEN_PROJECT_NAME)\"" >> Doxyfile ; \
	echo "PROJECT_NUMBER         = \"$(DOXYGEN_PROJECT_NUMBER)\"" >> Doxyfile ; \
	echo "INPUT                  = $(top_srcdir)" >> Doxyfile ; \
	echo "OUTPUT_DIRECTORY       = $(top_builddir)/apidocs" >> Doxyfile ; \
	echo "FILE_PATTERNS          = *.dox" >> Doxyfile ; \
	echo "RECURSIVE              = NO" >> Doxyfile ; \
	echo "SOURCE_BROWSER         = NO" >> Doxyfile ; \
	echo "ALPHABETICAL_INDEX     = NO" >> Doxyfile ; \
	echo "HTML_OUTPUT            = ." >> Doxyfile ; \
	echo "HTML_HEADER            = $(top_srcdir)/doc/api/mainheader.html" >> Doxyfile ; \
	echo "HTML_FOOTER            = $(top_srcdir)/doc/api/mainfooter.html" >> Doxyfile ; \
	echo "HTML_STYLESHEET        = $(top_builddir)/apidocs/common/doxygen.css" >> Doxyfile ; \
	echo "GENERATE_LATEX         = NO" >> Doxyfile ; \
	echo "GENERATE_RTF           = NO" >> Doxyfile ; \
	echo "GENERATE_MAN           = NO" >> Doxyfile ; \
	echo "GENERATE_XML           = NO" >> Doxyfile ; \
	echo "GENERATE_AUTOGEN_DEF   = NO" >> Doxyfile ; \
	echo "ENABLE_PREPROCESSING   = NO" >> Doxyfile ; \
	echo "CLASS_DIAGRAMS         = NO" >> Doxyfile ; \
	echo "HAVE_DOT               = NO" >> Doxyfile ; \
	echo "GENERATE_HTML          = YES" >> Doxyfile ;\
	$(mkinstalldirs) $(top_builddir)/apidocs ; \
	rm -f $(top_builddir)/apidocs/common ; \
	if test -d $(top_srcdir)/doc/common; then \
	   common_dir=`cd $(top_srcdir)/doc/common && pwd` ;\
	else \
	   common_dir=$(kde_libs_htmldir)/en/common ;\
	fi ;\
	$(LN_S) $$common_dir $(top_builddir)/apidocs/common ;\
	doxygen Doxyfile; \
	rm -f Doxyfile
	@true > $(top_builddir)/apidocs/subdirs
	@$(MAKE) apidox-am-tree PARENT="" PARENTINDENT=""
	@sort $(top_builddir)/apidocs/subdirs | sed -e 's+<!--.*-->++' > $(top_builddir)/apidocs/subdirs_ && mv $(top_builddir)/apidocs/subdirs_ $(top_builddir)/apidocs/subdirs
	@sh $(top_srcdir)/doc/api/doxyndex.sh $(top_builddir)/apidocs .


apidox-am-tree:
	@if test -n '$(SUBDIRS)' ; then \
		list='$(SUBDIRS)' ; \
		for subdir in $$list ; do \
			if test "x$$subdir" != "x."; then \
				if grep '^include .*Doxyfile.am' $(srcdir)/$$subdir/Makefile.am > /dev/null ; then \
					echo "Making apidox index in $$subdir"; \
					echo "<li><!-- $(PARENT)/$$subdir -->$(PARENTINDENT)<a href=\"@topdir@$(PARENT)/$$subdir/html/index.html\">$$subdir</a></li>" >> $(top_builddir)/apidocs/subdirs ; \
					(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) apidox-am-tree PARENT="$(PARENT)/$$subdir" PARENTINDENT='\&nbsp;\&nbsp;$(PARENTINDENT)' ) || exit 1; \
				fi ; \
			fi ; \
		done ; \
	fi

.PHONY: apidox-am-yes apidox-am-no install-data-local install-apidox install-apidox uninstall-local uninstall-apidox uninstall-apidox apidox apidox-am-toplevel-no apidox-am-toplevel-yes apidox-am-tree


# Local Variables:
# mode: makefile
# End:
